name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        echo $PWD
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest
        pip install -r ./bb_back/requirements.txt 
        pip install -r ./bb_back/requirements-dev.txt 
    # - name: mypy
    #   run: mypy .
    - name: flake8
      run: flake8 . --append-config ./bb_back/setup.cfg
    # - name: yapf
    #   run: yapf . --recursive --diff
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2 
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
      
    - name: Login to Docker 
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2 
      with:
        push: true
        context: ./bb_back/
        file: ./bb_back/Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/bb:latest 
        repo-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/developer/deploy/
            docker-compose stop
            touch .env
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
            # echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            # echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            # echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            # echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            # echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            # echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            docker-compose up -d 
            # docker exec $(docker ps -aqf "name=deploy_web_1") "python manage.py makemigrations"
            # docker exec $(docker ps -aqf "name=deploy_web_1") "python manage.py migrate"